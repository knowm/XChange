swagger: '2.0'
host: api.idex.market
basePath: /
schemes:
  - https
info:
  version: '1.0'
  title: idex
tags:
  - market
  - account
  - trade
consumes:
  - application/json
produces:
  - application/json
paths:
  /returnTicker:
    post:
      tags:
        - market
      operationId: Ticker
      parameters:
        - name: market
          in: body
          description: 'a JSON object the base market followed by an underscore, followed by the trade market'
          schema:
            type: object
            properties:
              market:
                type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnTickerResponse'
  /return24Volume:
    post:
      summary: 'Returns the 24-hour volume for all markets, plus totals for primary currencies. '
      operationId: Volume24
      tags:
        - market
      responses:
        '200':
          description: 'This function takes no JSON arguments{ ETH_REP: { ETH: ''1.3429046745'', REP: ''105.29046745'' },ETH_DVIP: { ETH: ''4'', DVIP: ''4'' },totalETH: ''5.3429046745'' }'
          schema:
            $ref: '#/definitions/Volume24Response'
  /returnOrderBook:
    post:
      operationId: OrderBook
      tags:
        - market
      summary: 'Returns the orderbook for a given market, or returns an object of the entire orderbook keyed by\ market if the market parameter is omitted.'
      parameters:
        - name: OrderBookReq
          in: body
          description: 'a JSON object the base market followed by an underscore, followed by the trade market'
          schema:
            type: object
            properties:
              market:
                type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnOrderBookResponse'
  /returnOpenOrders:
    post:
      operationId: OpenOrders
      tags:
        - trade
      summary: Returns the open orders for a given market and address
      parameters:
        - in: body
          name: OpenOrdersReq
          description: 'a JSON object the base market followed by an underscore, followed by the trade market'
          schema:
            type: object
            properties:
              address:
                type: string
                description: (address string) - Address to return open orders associated with
              market:
                type: string
                idexMarketDataService description: '(string) - String representing the market to query (example: ''ETH_DVIP'')'
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnOpenOrdersResponse'
  /returnTradeHistory:
    post:
      operationId: TradeHistory
      summary: trade history
      tags:
        - market
      parameters:
        - name: TradeHistoryReq
          in: body
          schema:
            type: object
            properties:
              market:
                type: string
                description: '(string) - If specified, will return an array of trade objects for the market, if omitted, will return an object of arrays of trade objects keyed by each market'
              address:
                type: string
                description: '(address string) - If specified, return value will only include trades that involve the address as the maker or taker. Note: if specified the type property of the trade objects will refer to the action on the market taken relative to the user, not relative to the market. This behavior is designed to mimic the My Trades section of the IDEX appication, also to mimic the behavior of the private returnTradeHistory API call on Poloniex'
              start:
                type: string
                description: '(number) - The inclusive UNIX timestamp (seconds since epoch, not ms) marking the earliest trade that will be returned in the response, if omitted will default to 0'
              end:
                type: string
                description: (number) - The inclusive UNIX timestamp marking the latest trade that will be returned in the response. If omitted will default to the current timestamp
      responses:
        '200':
          schema:
            type: array
            items:
              $ref: '#/definitions/TradeHistoryItem'
  /returnBalances:
    post:
      operationId: Balances
      tags:
        - account
      parameters:
        - name: BalancesReq
          in: body
          description: 'a JSON object the base market followed by an underscore, followed by the trade market'
          schema:
            type: object
            properties:
              address:
                type: string
                required: true
                description: (address string) - Address to query balances of
      description: Returns your available balances (total deposited minus amount in open orders) indexed by token symbol.
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnBalancesResponse'
  /returnCompleteBalances:
    post:
      tags:
        - account
      summary: 'Returns your available balances along with the amount you have in open orders for each token, indexed by token symbol.'
      operationId: CompleteBalances
      parameters:
        - name: CompleteBalancesReq
          in: body
          schema:
            type: object
            properties:
              address:
                type: string
                required: true
                description: (address string) - Address to query balances of
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnCompleteBalancesResponse'
          examples: '{ REP: { available: ''25.55306545'', onOrders: ''0'' },  DVIP: { available: ''200000000.31012358'', onOrders: ''0'' } }'
  /returnDepositsWithdrawals:
    post:
      operationId: FundingHistory
      tags:
        - account
      summary: 'Returns your deposit and withdrawal history within a range, specified by the "start" and "end" properties of the JSON input, both of which must be UNIX timestamps. Withdrawals can be marked as "PENDING" if they are queued for dispatch, "PROCESSING" if the transaction has been dispatched, and "COMPLETE" if the transaction has been mined.'
      parameters:
        - name: DepositsWithdrawalsReq
          in: body
          schema:
            type: object
            properties:
              address:
                type: string
                description: (address string) - Address to query deposit/withdrawal history for
              start:
                type: string
                description: '(number) - Inclusive starting UNIX timestamp of returned results, defaults to 0'
              end:
                type: string
                description: '(number) - Inclusive ending UNIX timestamp of returned results, defaults to current timestamp'
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnDepositsWithdrawalsResponse'
  /returnOrderTrades:
    post:
      operationId: OrderTrades
      tags:
        - trade
      summary: 'Returns all trades involving a given order hash, specified by the orderHash property of the JSON input.'
      parameters:
        - name: OrderTradesReq
          in: body
          schema:
            type: object
            properties:
              orderHash:
                type: string
                description: (256-bit hex string) - The order hash to query for associated trades
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnOrderTradesResponse'
          description: 'Sample output: [ { date: ''2017-10-11 21:41:15'',amount: ''0.3'',type: ''buy'',total: ''1'',price: ''0.3'',uuid: ''e8719a10-aecc-11e7-9535-3b8451fd4699'',transactionHash: ''0x28b945b586a5929c69337929533e04794d488c2d6e1122b7b915705d0dff8bb6'' } ]'
  /returnNextNonce:
    post:
      operationId: NextNonce
      tags:
        - trade
      summary: Returns the lowest nonce that you can use from the given address in one of the trade functions (see below)
      parameters:
        - name: NextNonceReq
          in: body
          schema:
            type: object
            properties:
              address:
                type: string
                description: (address string) - The address to query for the next nonce to use
      responses:
        '200':
          schema:
            $ref: '#/definitions/returnNextNonceResponse'
          description: 'Sample output: { nonce: 2650 }'
  /returnContractAddress:
    post:
      tags:
        - trade
      summary:    Returns the contract address used for depositing, withdrawing, and posting orders

      operationId: ContractAddress
      responses:
        200:
          examples: '{ "address":  "0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208" }'
          schema:
            $ref: '#/definitions/returnContractAddressResponse'

  /order:
    post:
      tags:
        - trade
      summary: Limit Order
      operationId: Order
      parameters:
        - name: OrderReq
          in: body
          schema:
            type: object
            properties:
              tokenBuy:
                type: string
                description: (address string) - The address of the token you will receive as a result of the trade
              amountBuy:
                type: string
                description: (uint256) - The amount of the token you will receive when the order is fully filled
              tokenSell:
                type: string
                description: (address string) - The address of the token you will lose as a result of the trade
              amountSell:
                type: string
                description: (uint256) - The amount of the token you will give up when the order is fully filled
              address:
                type: string
                description: (address string) - The address you are posting the order from
              nonce:
                type: string
                description: (uint256) - One time number associated with the limit order
              expires:
                type: integer
                description: (uint256) - DEPRECATED this property has no effect on your limit order but is still REQUIRED to submit a limit order as it is one of the parameters that is hashed. It must be a numeric type
              v:
                type: integer
              r:
                type: string
              s:
                type: string
      responses:
        '200':
          schema:
            type: object
            properties:
              error:
                type: string
              orderNumber:
                type: integer
                title: The Ordernumber Schema
                default: 0
                examples:
                  - 2101
              orderHash:
                type: string
                title: The Orderhash Schema
                default: ''
                examples:
                  - '0x3fe808be7b5df3747e5534056e9ff45ead5b1fcace430d7b4092e5fcd7161e21'
              price:
                type: string
                title: The Price Schema
                default: ''
                examples:
                  - '0.000129032258064516'
              amount:
                type: string
                title: The Amount Schema
                default: ''
                examples:
                  - '3100'
              total:
                type: string
                title: The Total Schema
                default: ''
                examples:
                  - '0.4'
              type:
                type: string
                title: The Type Schema
                default: ''
                examples:
                  - buy
              params:
                type: object
                properties:
                  tokenBuy:
                    type: string
                    title: The Tokenbuy Schema
                    default: ''
                    examples:
                      - '0x7c5a0ce9267ed19b22f8cae653f198e3e8daf098'
                  buyPrecision:
                    type: integer
                    title: The Buyprecision Schema
                    default: 0
                    examples:
                      - 18
                  amountBuy:
                    type: string
                    title: The Amountbuy Schema
                    default: ''
                    examples:
                      - '3100000000000000000000'
                  tokenSell:
                    type: string
                    title: The Tokensell Schema
                    default: ''
                    examples:
                      - '0x0000000000000000000000000000000000000000'
                  sellPrecision:
                    type: integer
                    title: The Sellprecision Schema
                    default: 0
                    examples:
                      - 18
                  amountSell:
                    type: string
                    title: The Amountsell Schema
                    default: ''
                    examples:
                      - '400000000000000000'
                  expires:
                    type: string
                    title: The Expires Schema
                    default: 0
                    examples:
                      - 100000
                  nonce:
                    type: string
                    title: The Nonce Schema
                    default: 0
                    examples:
                      - 1
                  user:
                    type: string
                    title: The User Schema
                    default: ''
                    examples:
                      - '0x57b080554ebafc8b17f4a6fd090c18fc8c9188a0'

  /returnCurrencies:
    post:
      operationId: Currencies
      tags:
        - market
      responses:
        200:
          description:
          schema:
            $ref: '#/definitions/returnCurrenciesResponse'
  /trade:
    post:
      operationId: Trade
      tags:
        - trade
      summary: 'Making a trade on IDEX actually involves signing a message for each order you wish to fill across and passing in an array of trades. For trades that fill a single order, the usual array with 1 object, or the object alone. The benefit of passing in multiple objects to fill across is that your action is atomic. All trades either succeed or none succeed.'
      parameters:
        - name: TradeReq
          in: body
          schema:
            $ref: '#/definitions/TradeReq'
      responses:
        '200':
          schema:
            $ref: '#/definitions/tradeResponse'
          description: 'Properties of each trade object in the trade you submit:To derive the hash you must sign for each order you are filling across, you must hash the following values in this orderorderHashamountaddressnonceApply the salt and hash the result as usual, then sign your salted hash.NOTE: Currently, all orders being filled in a trade must be for the same tokenBuy/tokenSell pair, and must all be signed from the same addressSample output:[ { amount: Ã¢â‚¬Ëœ0.07Ã¢â‚¬â„¢,date: Ã¢â‚¬Ëœ2017-10-13 16:25:36Ã¢â‚¬â„¢,total: Ã¢â‚¬Ëœ0.01Ã¢â‚¬â„¢,market: Ã¢â‚¬ËœETH_DVIPÃ¢â‚¬â„¢,type: Ã¢â‚¬ËœbuyÃ¢â‚¬â„¢,price: Ã¢â‚¬Ëœ7Ã¢â‚¬â„¢,orderHash: Ã¢â‚¬Ëœ0xcfe4018c59e50e0e1964c979e6213ce5eb8c751cbc98a44251eb48a0985adc52Ã¢â‚¬â„¢,uuid: Ã¢â‚¬Ëœ250d51a0-b033-11e7-9984-a9ab79bb8f35Ã¢â‚¬â„¢ } ]'
  /cancel:
    post:
      tags:
        - trade
      operationId: Cancel
      summary: Cancels an order associated with the address. JSON input must include the following properties
      parameters:
        - name: CancelReq
          in: body
          schema:
            type: object
            properties:
              orderHash:
                type: string
                in: body
                description: (256-bit hex string) - The raw hash of the order you are cancelling
              nonce:
                type: string
                description: (uint256) - One time number associated with the address
              address:
                type: string
                description: '(address string) - The address you are sending the cancel from, must own the order'
              v:
                type: integer
                description: '- ...'
              r:
                type: string
                description: '- ...'
              s:
                type: string
                description: '- v, r, and s refer to the values produced by signing the message'
      responses:
        '200':
          schema:
            $ref: '#/definitions/cancelResponse'
          description: 'To derive the signature for this API call, hash the following parameters in this orderorderHashnonceSalt and sign the hash as usual to prepare your payloadSample output:{ success: 1 }'
  /withdraw:
    post:
      operationId: Withdraw
      tags:
        - account
      summary: Withdraws funds associated with the address. You cannot withdraw funds that are tied up in open orders. JSON payload must include the following properties
      parameters:
        - name: WithdrawReq
          in: body
          schema:
            type: object
            properties:
              address:
                required: true
                type: string
                description: (address string) - The address you are transacting from
              amount:
                required: true
                type: string
                description: '(uint256) - The raw amount you are withdrawing, not adjusted for token precision'
              token:
                required: true
                type: string
                description: '(address string) - The address of the token you are withdrawing from, see earlier notes for ETH'
              nonce:
                required: true
                type: string
                description: (uint256) - One time numeric value associated with your address
              s:
                required: true
                type: string
              v:
                required: true
                type: integer
              r:
                required: true
                type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/withdrawResponse'
          description: 'To derive the signature for this API call, hash the following parameters in this order contract addresstokenamountaddressnonceSalt the hash as described earlier and sign it to produce your signature triplet.Useful response upon withdrawal success is in the works, for now simply test that there is no error propertyin the result object to confirm your withdrawal has succeeded.'
definitions:
  returnTickerResponse:
    type: object
    definitions: {}
    properties:
      last:
        type: string
        title: The Last Schema
        default: ''
        examples:
          - '0.000981'
      high:
        type: string
        title: The High Schema
        default: ''
        examples:
          - '0.0010763'
      low:
        type: string
        title: The Low Schema
        default: ''
        examples:
          - '0.0009777'
      lowestAsk:
        type: string
        title: The Lowestask Schema
        default: ''
        examples:
          - '0.00098151'
      highestBid:
        type: string
        title: The Highestbid Schema
        default: ''
        examples:
          - '0.0007853'
      percentChange:
        type: string
        title: The Percentchange Schema
        default: ''
        examples:
          - '-1.83619353'
      baseVolume:
        type: string
        title: The Basevolume Schema
        default: ''
        examples:
          - '7.3922603247161'
      quoteVolume:
        type: string
        title: The Quotevolume Schema
        default: ''
        examples:
          - '7462.998433'
  returnTickerRequestedWithNull:
    type: object
    additionalProperties:
      $ref: '#/definitions/returnTickerResponse'
  return24VolumeResponse:
    type: object
  ask:
    type: object
    properties:
      price:
        type: string
        title: The Price Schema
        default: ''
        examples:
          - '2'
      amount:
        type: string
        title: The Amount Schema
        default: ''
        examples:
          - '1'
      total:
        type: string
        title: The Total Schema
        default: ''
        examples:
          - '2'
      orderHash:
        type: string
        title: The Orderhash Schema
        default: ''
        examples:
          - '0x6aee6591def621a435dd86eafa32dfc534d4baa38d715988d6f23f3e2f20a29a'
      params:
        type: object
        properties:
          tokenBuy:
            type: string
            title: The Tokenbuy Schema
            default: ''
            examples:
              - '0x0000000000000000000000000000000000000000'
          buySymbol:
            type: string
            title: The Buysymbol Schema
            default: ''
            examples:
              - ETH
          buyPrecision:
            type: integer
            title: The Buyprecision Schema
            default: 0
            examples:
              - 18
          amountBuy:
            type: string
            title: The Amountbuy Schema
            default: ''
            examples:
              - '2000000000000000000'
          tokenSell:
            type: string
            title: The Tokensell Schema
            default: ''
            examples:
              - '0xf59fad2879fb8380ffa6049a48abf9c9959b3b5c'
          sellSymbol:
            type: string
            title: The Sellsymbol Schema
            default: ''
            examples:
              - DVIP
          sellPrecision:
            type: integer
            title: The Sellprecision Schema
            default: 0
            examples:
              - 8
          amountSell:
            type: string
            title: The Amountsell Schema
            default: ''
            examples:
              - '100000000'
          expires:
            type: string
            title: The Expires Schema
            default: 0
            examples:
              - 190000
          nonce:
            type: string
            title: The Nonce Schema
            default: 0
            examples:
              - 164
          user:
            type: string
            title: The User Schema
            default: ''
            examples:
              - '0xca82b7b95604f70b3ff5c6ede797a28b11b47d63'
  returnOrderBookResponse:
    type: object
    properties:
      asks:
        type: array
        items:
          $ref: '#/definitions/ask'
      bids:
        type: array
        items:
          $ref: '#/definitions/ask'
  returnOrderBookResponseWithEmptyParam:
    type: object
    additionalProperties:
      $ref: '#/definitions/returnOrderBookResponse'
  returnOpenOrdersResponse:
    type: array
    definitions: {}
    items:
      type: object
      properties:
        orderNumber:
          type: integer
          title: The Ordernumber Schema
          default: 0
          examples:
            - 1412
        orderHash:
          type: string
          title: The Orderhash Schema
          default: ''
          examples:
            - '0xf1bbc500af8d411b0096ac62bc9b60e97024ad8b9ea170340ff0ecfa03536417'
        price:
          type: string
          title: The Price Schema
          default: ''
          examples:
            - '2.3'
        amount:
          type: string
          title: The Amount Schema
          default: ''
          examples:
            - '1.2'
        total:
          type: string
          title: The Total Schema
          default: ''
          examples:
            - '2.76'
        type:
          type: string
          title: The Type Schema
          default: ''
          examples:
            - sell
        params:
          type: object
          properties:
            tokenBuy:
              type: string
              title: The Tokenbuy Schema
              default: ''
              examples:
                - '0x0000000000000000000000000000000000000000'
            buySymbol:
              type: string
              title: The Buysymbol Schema
              default: ''
              examples:
                - ETH
            buyPrecision:
              type: integer
              title: The Buyprecision Schema
              default: 0
              examples:
                - 18
            amountBuy:
              type: string
              title: The Amountbuy Schema
              default: ''
              examples:
                - '2760000000000000000'
            tokenSell:
              type: string
              title: The Tokensell Schema
              default: ''
              examples:
                - '0xf59fad2879fb8380ffa6049a48abf9c9959b3b5c'
            sellSymbol:
              type: string
              title: The Sellsymbol Schema
              default: ''
              examples:
                - DVIP
            sellPrecision:
              type: integer
              title: The Sellprecision Schema
              default: 0
              examples:
                - 8
            amountSell:
              type: string
              title: The Amountsell Schema
              default: ''
              examples:
                - '120000000'
            expires:
              type: integer
              title: The Expires Schema
              default: 0
              examples:
                - 190000
            nonce:
              type: integer
              title: The Nonce Schema
              default: 0
              examples:
                - 166
            user:
              type: string
              title: The User Schema
              default: ''
              examples:
                - '0xca82b7b95604f70b3ff5c6ede797a28b11b47d63'
  TradeHistoryItem:
    type: object
    properties:
      date:
        type: string
        title: The Date Schema
        default: ''
        examples:
          - '2017-10-11 21:41:15'
      amount:
        type: string
        title: The Amount Schema
        default: ''
        examples:
          - '0.3'
      type:
        type: string
        title: The Type Schema
        default: ''
        examples:
          - buy
      total:
        type: string
        title: The Total Schema
        default: ''
        examples:
          - '1'
      price:
        type: string
        title: The Price Schema
        default: ''
        examples:
          - '0.3'
      orderHash:
        type: string
        title: The Orderhash Schema
        default: ''
        examples:
          - '0x600c405c44d30086771ac0bd9b455de08813127ff0c56017202c95df190169ae'
      uuid:
        type: string
        title: The Uuid Schema
        default: ''
        examples:
          - e8719a10-aecc-11e7-9535-3b8451fd4699
      transactionHash:
        type: string
        title: The Transactionhash Schema
        default: ''
        examples:
          - '0x28b945b586a5929c69337929533e04794d488c2d6e1122b7b915705d0dff8bb6'
  returnBalancesResponse:
    type: object
    additionalProperties:
      type: number
  completeBalance:
    type: object
    properties:
      available:
        type: number
      onOrders:
        type: number
  returnCompleteBalancesResponse:
    type: object
    additionalProperties:
      type: object
      $ref: '#/definitions/completeBalance'
  FundingLedger:
              type: object
              properties:
                depositNumber:
                  type: string
                  title: The Depositnumber Schema
                  default: 0
                  examples:
                    - 265
                currency:
                  type: string
                  title: The Currency Schema
                  default: ''
                  examples:
                    - ETH
                amount:
                  type: string
                  title: The Amount Schema
                  default: ''
                  examples:
                    - '4.5'
                timestamp:
                  type: string
                  title: The Timestamp Schema
                  default: 0
                  examples:
                status:
                  type: string
                transactionHash:
                  type: string
                  title: The Transactionhash Schema
                  default: ''
                  examples:
                    - '0x52897291dba0a7b255ee7a27a8ca44a9e8d6919ca14f917616444bf974c48897'

  returnDepositsWithdrawalsResponse:
    type: object
    properties:
      deposits:
        type: array
        items:
          $ref: '#/definitions/FundingLedger'
      withdrawals:
        type: array
        items:
          $ref: '#/definitions/FundingLedger'
  withdrawalsResponse:
    type: array
    items:
      type: object
      properties:
        withdrawalNumber:
          type: string
          title: The Withdrawalnumber Schema
          default: 0
          examples:
            - 174
        currency:
          type: string
          title: The Currency Schema
          default: ''
          examples:
            - ETH
        amount:
          type: string
          title: The Amount Schema
          default: ''
          examples:
            - '4.5'
        timestamp:
          type: string
          title: The Timestamp Schema
          default: 0
          examples:
            - 1506552152
        transactionHash:
          type: string
          title: The Transactionhash Schema
          default: ''
          examples:
            - '0xe52e9c569fe659556d1e56d8cca2084db0b452cd889f55ec3b4e2f3af61faa57'
        status:
          type: string
          title: The Status Schema
          default: ''
          examples:
            - COMPLETE
  returnOrderTradesResponse:
    type: array
    definitions: {}
    items:
      type: object
      properties:
        date:
          type: string
          title: The Date Schema
          default: ''
          examples:
            - '2017-10-11 21:41:15'
        amount:
          type: string
          title: The Amount Schema
          default: ''
          examples:
            - '0.3'
        type:
          type: string
          title: The Type Schema
          default: ''
          examples:
            - buy
        total:
          type: string
          title: The Total Schema
          default: ''
          examples:
            - '1'
        price:
          type: string
          title: The Price Schema
          default: ''
          examples:
            - '0.3'
        uuid:
          type: string
          title: The Uuid Schema
          default: ''
          examples:
            - e8719a10-aecc-11e7-9535-3b8451fd4699
        transactionHash:
          type: string
          title: The Transactionhash Schema
          default: ''
          examples:
            - '0x28b945b586a5929c69337929533e04794d488c2d6e1122b7b915705d0dff8bb6'
  returnNextNonceResponse:
    type: object
    definitions: {}
    properties:
      nonce:
        type: string
        title: The Nonce Schema
        default: 0
        examples:
          - 2650
  returnContractAddressResponse:
    type: object
    definitions: {}
    properties:
      address:
        type: string
  orderResponse:
    type: object
    definitions: {}
    properties:
      orderNumber:
        type: integer
        title: The Ordernumber Schema
        default: 0
        examples:
          - 2101
      orderHash:
        type: string
        title: The Orderhash Schema
        default: ''
        examples:
          - '0x3fe808be7b5df3747e5534056e9ff45ead5b1fcace430d7b4092e5fcd7161e21'
      price:
        type: string
        title: The Price Schema
        default: ''
        examples:
          - '0.000129032258064516'
      amount:
        type: string
        title: The Amount Schema
        default: ''
        examples:
          - '3100'
      total:
        type: string
        title: The Total Schema
        default: ''
        examples:
          - '0.4'
      type:
        type: string
        title: The Type Schema
        default: ''
        examples:
          - buy
      params:
        type: object
        properties:
          tokenBuy:
            type: string
            title: The Tokenbuy Schema
            default: ''
            examples:
              - '0x7c5a0ce9267ed19b22f8cae653f198e3e8daf098'
          buyPrecision:
            type: integer
            title: The Buyprecision Schema
            default: 0
            examples:
              - 18
          amountBuy:
            type: string
            title: The Amountbuy Schema
            default: ''
            examples:
              - '3100000000000000000000'
          tokenSell:
            type: string
            title: The Tokensell Schema
            default: ''
            examples:
              - '0x0000000000000000000000000000000000000000'
          sellPrecision:
            type: integer
            title: The Sellprecision Schema
            default: 0
            examples:
              - 18
          amountSell:
            type: string
            title: The Amountsell Schema
            default: ''
            examples:
              - '400000000000000000'
          expires:
            type: integer
            title: The Expires Schema
            default: 0
            examples:
              - 100000
          nonce:
            type: integer
            title: The Nonce Schema
            default: 0
            examples:
              - 1
          user:
            type: string
            title: The User Schema
            default: ''
            examples:
              - '0x57b080554ebafc8b17f4a6fd090c18fc8c9188a0'
  tradeResponse:
    type: array
    definitions: {}
    items:
      type: object
      properties:
        amount:
          type: number
          title: The Amount Schema
          default: 0
          examples:
            - 0.07000000029802322
        date:
          type: string
          title: The Date Schema
          default: ''
          examples:
            - '2017-10-13 16:25:36'
        total:
          type: string
          title: The Total Schema
          default: ''
          examples:
            - '0.01'
        market:
          type: string
          title: The Market Schema
          default: ''
          examples:
            - ETH_DVIP
        type:
          type: string
          title: The Type Schema
          default: ''
          examples:
            - buy
        price:
          type: string
          title: The Price Schema
          default: ''
          examples:
            - '7'
        orderHash:
          type: string
          title: The Orderhash Schema
          default: ''
          examples:
            - '0xcfe4018c59e50e0e1964c979e6213ce5eb8c751cbc98a44251eb48a0985adc52'
        uuid:
          type: string
          title: The Uuid Schema
          default: ''
          examples:
            - 250d51a0-b033-11e7-9984-a9ab79bb8f35
  cancelResponse:
    type: object
    properties:
      success:
        type: integer
      error:
        type: string
        description: wishful thinking
  withdrawResponse:
    type: object
  examplePushMethodResponse:
    type: object
    definitions: {}
    properties:
      topic:
        type: string
        title: The Topic Schema
        default: ''
        examples:
          - ETH_DVIP
      message:
        type: object
        properties:
          type:
            type: string
            title: The Type Schema
            default: ''
            examples:
              - orderBookAdd
          data:
            type: object
            properties:
              orderNumber:
                type: integer
                title: The Ordernumber Schema
                default: 0
                examples:
                  - 2067
              orderHash:
                type: string
                title: The Orderhash Schema
                default: ''
                examples:
                  - '0xd9a438e69fbefaf63c327fb8a4dcafd9b1f0faaba428e16013a15328f08c02b2'
              price:
                type: string
                title: The Price Schema
                default: ''
                examples:
                  - '10'
              amount:
                type: string
                title: The Amount Schema
                default: ''
                examples:
                  - '1'
              total:
                type: string
                title: The Total Schema
                default: ''
                examples:
                  - '10'
              type:
                type: string
                title: The Type Schema
                default: ''
                examples:
                  - sell
              params:
                type: object
                properties:
                  tokenBuy:
                    type: string
                    title: The Tokenbuy Schema
                    default: ''
                    examples:
                      - '0x0000000000000000000000000000000000000000'
                  buyPrecision:
                    type: integer
                    title: The Buyprecision Schema
                    default: 0
                    examples:
                      - 18
                  amountBuy:
                    type: string
                    title: The Amountbuy Schema
                    default: ''
                    examples:
                      - '10000000000000000000'
                  tokenSell:
                    type: string
                    title: The Tokensell Schema
                    default: ''
                    examples:
                      - '0xadc46ff5434910bd17b24ffb429e585223287d7f'
                  sellPrecision:
                    type: integer
                    title: The Sellprecision Schema
                    default: 0
                    examples:
                      - 2
                  amountSell:
                    type: string
                    title: The Amountsell Schema
                    default: ''
                    examples:
                      - '100'
                  expires:
                    type: integer
                    title: The Expires Schema
                    default: 0
                    examples:
                      - 190000
                  nonce:
                    type: integer
                    title: The Nonce Schema
                    default: 0
                    examples:
                      - 2831
                  user:
                    type: string
                    title: The User Schema
                    default: ''
                    examples:
                      - '0x034767f3c519f361c5ecf46ebfc08981c629d381'
  TradeReq:
    type: object
    properties:
      orderHash:
        type: string
        description: '- This is the unsalted hash of the order you are filling. See raw in the example code given with in the section that describes the order API call. The orderHash property of an order can be retrieved from the API calls which return orders, but for higher security we recommend you derive the hash yourself from the order parameters.'
      amount:
        type: string
        description: '- This is the amount of the order you are filling, the raw value not adjusted for precision IMPORTANT: THIS PROPERTY IS IN TERMS OF THE ORDER''S amountBuy PROPERTY. This is NOT the amount of tokenSell you are receiving, but the amount of tokenBuy you are filling the order with. Do not trade unless you fully understand this idea. The amount of the token you will receive as a result of the trade is proportional to the ratio between amountSell and amountBuy'
      nonce:
        type: string
        description: '- One time numeric value associated with the trade. Note: if filling multiple orders in one trade, every nonce in the list of trades must be greater than the one in the previous item'
      address:
        type: string
        description: '- The address you are transacting from'
      v:
        type: integer
        description: '- ...'
      r:
        type: string
        description: '- 0x'
      s:
        type: string
        description: '- v, r, and s refer to the values produced by signing the message'
  Volume24Response:
    type: object
    properties:
      error:
        type: string
    additionalProperties:
      allOf:
        - $ref: '#/definitions/Volume24Middle'
        - $ref: '#/definitions/Volume24Total'
  Volume24Middle:
    type: number
  Volume24Total:
    type: object
    additionalProperties:
      type: number
  returnCurrenciesResponse:
            type: object
            additionalProperties:
              $ref: '#/definitions/IdexCurrMeta'
  IdexCurrMeta:
                    type: object
                    properties:
                      decimals:
                        $id: /properties/ETH/properties/decimals
                        type: integer
                        title: The Decimals Schema
                        default: 0
                        examples:
                        - 18
                      address:
                        $id: /properties/ETH/properties/address
                        type: string
                        title: The Address Schema
                        default: ''
                        examples:
                        - '0x0000000000000000000000000000000000000000'
                      name:
                        $id: /properties/ETH/properties/name
                        type: string
                        title: The Name Schema
                        default: ''
                        examples:
                        - Ether
