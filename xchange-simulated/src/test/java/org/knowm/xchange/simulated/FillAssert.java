package org.knowm.xchange.simulated;

/**
 * {@link Fill} specific assertions - Generated by CustomAssertionGenerator.
 *
 * <p>Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractFillAssert} instead.
 */
@javax.annotation.Generated(value = "assertj-assertions-generator")
class FillAssert extends AbstractFillAssert<FillAssert, Fill> {

  /**
   * Creates a new <code>{@link FillAssert}</code> to make assertions on actual Fill.
   *
   * @param actual the Fill we want to make assertions on.
   */
  public FillAssert(Fill actual) {
    super(actual, FillAssert.class);
  }

  /**
   * An entry point for FillAssert to follow AssertJ standard <code>assertThat()</code> statements.
   * <br>
   * With a static import, one can write directly: <code>assertThat(myFill)</code> and get specific
   * assertion with code completion.
   *
   * @param actual the Fill we want to make assertions on.
   * @return a new <code>{@link FillAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static FillAssert assertThat(Fill actual) {
    return new FillAssert(actual);
  }
}
