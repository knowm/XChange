package org.knowm.xchange.simulated;

import org.knowm.xchange.dto.trade.UserTrade;

/**
 * {@link UserTrade} specific assertions - Generated by CustomAssertionGenerator.
 *
 * <p>Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractUserTradeAssert} instead.
 */
@javax.annotation.Generated(value = "assertj-assertions-generator")
class UserTradeAssert extends AbstractUserTradeAssert<UserTradeAssert, UserTrade> {

  /**
   * Creates a new <code>{@link UserTradeAssert}</code> to make assertions on actual UserTrade.
   *
   * @param actual the UserTrade we want to make assertions on.
   */
  public UserTradeAssert(UserTrade actual) {
    super(actual, UserTradeAssert.class);
  }

  /**
   * An entry point for UserTradeAssert to follow AssertJ standard <code>assertThat()</code>
   * statements.<br>
   * With a static import, one can write directly: <code>assertThat(myUserTrade)</code> and get
   * specific assertion with code completion.
   *
   * @param actual the UserTrade we want to make assertions on.
   * @return a new <code>{@link UserTradeAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static UserTradeAssert assertThat(UserTrade actual) {
    return new UserTradeAssert(actual);
  }
}
