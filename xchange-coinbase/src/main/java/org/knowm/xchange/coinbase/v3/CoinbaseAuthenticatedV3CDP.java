package org.knowm.xchange.coinbase.v3;

import org.knowm.xchange.coinbase.v2.Coinbase;
import org.knowm.xchange.coinbase.v2.dto.CoinbaseException;
import org.knowm.xchange.coinbase.v3.dto.transactions.CoinbaseAdvancedTradeAccountsResponse;
import org.knowm.xchange.coinbase.v3.dto.transactions.CoinbaseAdvancedTradeOrderFillsResponse;
import si.mazi.rescu.ParamsDigest;

import javax.ws.rs.GET;
import javax.ws.rs.HeaderParam;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import java.io.IOException;

import static org.knowm.xchange.coinbase.v2.CoinbaseV2Digest.ADVANCED_TRADING_V3;

@Path(ADVANCED_TRADING_V3)
@Produces(MediaType.APPLICATION_JSON)
public interface CoinbaseAuthenticatedV3CDP extends Coinbase {

  /**
   * All API key requests must be signed and contain the following headers.
   *
   * <p>All request bodies should have content type application/json and be valid JSON.
   *
   * <p>The CB-ACCESS-SIGN header is generated by creating a sha256 HMAC using the secret key on the
   * prehash string timestamp + method + requestPath + body (where + represents string
   * concatenation). The timestamp value is the same as the CB-ACCESS-TIMESTAMP header.
   *
   * <p>The body is the request body string or omitted if there is no request body (typically for
   * GET requests).
   *
   * <p>The method should be UPPER CASE.
   *
   * <p><a
   * href="https://developers.coinbase.com/api/v2#api-key">developers.coinbase.com/api/v2#api-key</a>
   */

  // ok
  @GET
  @Path("accounts")
  CoinbaseAdvancedTradeAccountsResponse getAccounts(
      @HeaderParam("Authorization") ParamsDigest signature,
      @QueryParam("limit") Integer limit,
      @QueryParam("cursor") String cursor)
      throws IOException, CoinbaseException;

  @GET
  @Path("orders/historical/fills")
  CoinbaseAdvancedTradeOrderFillsResponse getFills(
      @HeaderParam("Authorization") ParamsDigest signature,
      @QueryParam("order_id") String orderId,
      @QueryParam("product_id") String productId,
      @QueryParam("start_sequence_timestamp") String start,
      @QueryParam("end_sequence_timestamp") String end,
      @QueryParam("limit") int limit,
      @QueryParam("cursor") String cursor
  )
      throws IOException, CoinbaseException;

}
