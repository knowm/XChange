/*
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)  ----  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  ----  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.knowm.xchange.bitmex.dto;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

/**
 * Raw Order and Balance Data
 */
@ApiModel(description = "Raw Order and Balance Data")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-06T17:10:23.689Z")
public class BitmexExecution {
  @SerializedName("execID")
  private String execID = null;

  @SerializedName("orderID")
  private String orderID = null;

  @SerializedName("clOrdID")
  private String clOrdID = null;

  @SerializedName("clOrdLinkID")
  private String clOrdLinkID = null;

  @SerializedName("account")
  private BigDecimal account = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("side")
  private String side = null;

  @SerializedName("lastQty")
  private BigDecimal lastQty = null;

  @SerializedName("lastPx")
  private Double lastPx = null;

  @SerializedName("underlyingLastPx")
  private Double underlyingLastPx = null;

  @SerializedName("lastMkt")
  private String lastMkt = null;

  @SerializedName("lastLiquidityInd")
  private String lastLiquidityInd = null;

  @SerializedName("simpleOrderQty")
  private Double simpleOrderQty = null;

  @SerializedName("orderQty")
  private BigDecimal orderQty = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("displayQty")
  private BigDecimal displayQty = null;

  @SerializedName("stopPx")
  private Double stopPx = null;

  @SerializedName("pegOffsetValue")
  private Double pegOffsetValue = null;

  @SerializedName("pegPriceType")
  private String pegPriceType = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("settlCurrency")
  private String settlCurrency = null;

  @SerializedName("execType")
  private String execType = null;

  @SerializedName("ordType")
  private String ordType = null;

  @SerializedName("timeInForce")
  private String timeInForce = null;

  @SerializedName("execInst")
  private String execInst = null;

  @SerializedName("contingencyType")
  private String contingencyType = null;

  @SerializedName("exDestination")
  private String exDestination = null;

  @SerializedName("ordStatus")
  private String ordStatus = null;

  @SerializedName("triggered")
  private String triggered = null;

  @SerializedName("workingIndicator")
  private Boolean workingIndicator = null;

  @SerializedName("ordRejReason")
  private String ordRejReason = null;

  @SerializedName("simpleLeavesQty")
  private Double simpleLeavesQty = null;

  @SerializedName("leavesQty")
  private BigDecimal leavesQty = null;

  @SerializedName("simpleCumQty")
  private Double simpleCumQty = null;

  @SerializedName("cumQty")
  private BigDecimal cumQty = null;

  @SerializedName("avgPx")
  private Double avgPx = null;

  @SerializedName("commission")
  private Double commission = null;

  @SerializedName("tradePublishIndicator")
  private String tradePublishIndicator = null;

  @SerializedName("multiLegReportingType")
  private String multiLegReportingType = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("trdMatchID")
  private String trdMatchID = null;

  @SerializedName("execCost")
  private BigDecimal execCost = null;

  @SerializedName("execComm")
  private BigDecimal execComm = null;

  @SerializedName("homeNotional")
  private Double homeNotional = null;

  @SerializedName("foreignNotional")
  private Double foreignNotional = null;

  @SerializedName("transactTime")
  private OffsetDateTime transactTime = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public BitmexExecution execID(String execID) {
    this.execID = execID;
    return this;
  }

   /**
   * Get execID
   * @return execID
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExecID() {
    return execID;
  }

  public void setExecID(String execID) {
    this.execID = execID;
  }

  public BitmexExecution orderID(String orderID) {
    this.orderID = orderID;
    return this;
  }

   /**
   * Get orderID
   * @return orderID
  **/
  @ApiModelProperty(value = "")
  public String getOrderID() {
    return orderID;
  }

  public void setOrderID(String orderID) {
    this.orderID = orderID;
  }

  public BitmexExecution clOrdID(String clOrdID) {
    this.clOrdID = clOrdID;
    return this;
  }

   /**
   * Get clOrdID
   * @return clOrdID
  **/
  @ApiModelProperty(value = "")
  public String getClOrdID() {
    return clOrdID;
  }

  public void setClOrdID(String clOrdID) {
    this.clOrdID = clOrdID;
  }

  public BitmexExecution clOrdLinkID(String clOrdLinkID) {
    this.clOrdLinkID = clOrdLinkID;
    return this;
  }

   /**
   * Get clOrdLinkID
   * @return clOrdLinkID
  **/
  @ApiModelProperty(value = "")
  public String getClOrdLinkID() {
    return clOrdLinkID;
  }

  public void setClOrdLinkID(String clOrdLinkID) {
    this.clOrdLinkID = clOrdLinkID;
  }

  public BitmexExecution account(BigDecimal account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAccount() {
    return account;
  }

  public void setAccount(BigDecimal account) {
    this.account = account;
  }

  public BitmexExecution symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public BitmexExecution side(String side) {
    this.side = side;
    return this;
  }

   /**
   * Get side
   * @return side
  **/
  @ApiModelProperty(value = "")
  public String getSide() {
    return side;
  }

  public void setSide(String side) {
    this.side = side;
  }

  public BitmexExecution lastQty(BigDecimal lastQty) {
    this.lastQty = lastQty;
    return this;
  }

   /**
   * Get lastQty
   * @return lastQty
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getLastQty() {
    return lastQty;
  }

  public void setLastQty(BigDecimal lastQty) {
    this.lastQty = lastQty;
  }

  public BitmexExecution lastPx(Double lastPx) {
    this.lastPx = lastPx;
    return this;
  }

   /**
   * Get lastPx
   * @return lastPx
  **/
  @ApiModelProperty(value = "")
  public Double getLastPx() {
    return lastPx;
  }

  public void setLastPx(Double lastPx) {
    this.lastPx = lastPx;
  }

  public BitmexExecution underlyingLastPx(Double underlyingLastPx) {
    this.underlyingLastPx = underlyingLastPx;
    return this;
  }

   /**
   * Get underlyingLastPx
   * @return underlyingLastPx
  **/
  @ApiModelProperty(value = "")
  public Double getUnderlyingLastPx() {
    return underlyingLastPx;
  }

  public void setUnderlyingLastPx(Double underlyingLastPx) {
    this.underlyingLastPx = underlyingLastPx;
  }

  public BitmexExecution lastMkt(String lastMkt) {
    this.lastMkt = lastMkt;
    return this;
  }

   /**
   * Get lastMkt
   * @return lastMkt
  **/
  @ApiModelProperty(value = "")
  public String getLastMkt() {
    return lastMkt;
  }

  public void setLastMkt(String lastMkt) {
    this.lastMkt = lastMkt;
  }

  public BitmexExecution lastLiquidityInd(String lastLiquidityInd) {
    this.lastLiquidityInd = lastLiquidityInd;
    return this;
  }

   /**
   * Get lastLiquidityInd
   * @return lastLiquidityInd
  **/
  @ApiModelProperty(value = "")
  public String getLastLiquidityInd() {
    return lastLiquidityInd;
  }

  public void setLastLiquidityInd(String lastLiquidityInd) {
    this.lastLiquidityInd = lastLiquidityInd;
  }

  public BitmexExecution simpleOrderQty(Double simpleOrderQty) {
    this.simpleOrderQty = simpleOrderQty;
    return this;
  }

   /**
   * Get simpleOrderQty
   * @return simpleOrderQty
  **/
  @ApiModelProperty(value = "")
  public Double getSimpleOrderQty() {
    return simpleOrderQty;
  }

  public void setSimpleOrderQty(Double simpleOrderQty) {
    this.simpleOrderQty = simpleOrderQty;
  }

  public BitmexExecution orderQty(BigDecimal orderQty) {
    this.orderQty = orderQty;
    return this;
  }

   /**
   * Get orderQty
   * @return orderQty
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getOrderQty() {
    return orderQty;
  }

  public void setOrderQty(BigDecimal orderQty) {
    this.orderQty = orderQty;
  }

  public BitmexExecution price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public BitmexExecution displayQty(BigDecimal displayQty) {
    this.displayQty = displayQty;
    return this;
  }

   /**
   * Get displayQty
   * @return displayQty
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDisplayQty() {
    return displayQty;
  }

  public void setDisplayQty(BigDecimal displayQty) {
    this.displayQty = displayQty;
  }

  public BitmexExecution stopPx(Double stopPx) {
    this.stopPx = stopPx;
    return this;
  }

   /**
   * Get stopPx
   * @return stopPx
  **/
  @ApiModelProperty(value = "")
  public Double getStopPx() {
    return stopPx;
  }

  public void setStopPx(Double stopPx) {
    this.stopPx = stopPx;
  }

  public BitmexExecution pegOffsetValue(Double pegOffsetValue) {
    this.pegOffsetValue = pegOffsetValue;
    return this;
  }

   /**
   * Get pegOffsetValue
   * @return pegOffsetValue
  **/
  @ApiModelProperty(value = "")
  public Double getPegOffsetValue() {
    return pegOffsetValue;
  }

  public void setPegOffsetValue(Double pegOffsetValue) {
    this.pegOffsetValue = pegOffsetValue;
  }

  public BitmexExecution pegPriceType(String pegPriceType) {
    this.pegPriceType = pegPriceType;
    return this;
  }

   /**
   * Get pegPriceType
   * @return pegPriceType
  **/
  @ApiModelProperty(value = "")
  public String getPegPriceType() {
    return pegPriceType;
  }

  public void setPegPriceType(String pegPriceType) {
    this.pegPriceType = pegPriceType;
  }

  public BitmexExecution currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public BitmexExecution settlCurrency(String settlCurrency) {
    this.settlCurrency = settlCurrency;
    return this;
  }

   /**
   * Get settlCurrency
   * @return settlCurrency
  **/
  @ApiModelProperty(value = "")
  public String getSettlCurrency() {
    return settlCurrency;
  }

  public void setSettlCurrency(String settlCurrency) {
    this.settlCurrency = settlCurrency;
  }

  public BitmexExecution execType(String execType) {
    this.execType = execType;
    return this;
  }

   /**
   * Get execType
   * @return execType
  **/
  @ApiModelProperty(value = "")
  public String getExecType() {
    return execType;
  }

  public void setExecType(String execType) {
    this.execType = execType;
  }

  public BitmexExecution ordType(String ordType) {
    this.ordType = ordType;
    return this;
  }

   /**
   * Get ordType
   * @return ordType
  **/
  @ApiModelProperty(value = "")
  public String getOrdType() {
    return ordType;
  }

  public void setOrdType(String ordType) {
    this.ordType = ordType;
  }

  public BitmexExecution timeInForce(String timeInForce) {
    this.timeInForce = timeInForce;
    return this;
  }

   /**
   * Get timeInForce
   * @return timeInForce
  **/
  @ApiModelProperty(value = "")
  public String getTimeInForce() {
    return timeInForce;
  }

  public void setTimeInForce(String timeInForce) {
    this.timeInForce = timeInForce;
  }

  public BitmexExecution execInst(String execInst) {
    this.execInst = execInst;
    return this;
  }

   /**
   * Get execInst
   * @return execInst
  **/
  @ApiModelProperty(value = "")
  public String getExecInst() {
    return execInst;
  }

  public void setExecInst(String execInst) {
    this.execInst = execInst;
  }

  public BitmexExecution contingencyType(String contingencyType) {
    this.contingencyType = contingencyType;
    return this;
  }

   /**
   * Get contingencyType
   * @return contingencyType
  **/
  @ApiModelProperty(value = "")
  public String getContingencyType() {
    return contingencyType;
  }

  public void setContingencyType(String contingencyType) {
    this.contingencyType = contingencyType;
  }

  public BitmexExecution exDestination(String exDestination) {
    this.exDestination = exDestination;
    return this;
  }

   /**
   * Get exDestination
   * @return exDestination
  **/
  @ApiModelProperty(value = "")
  public String getExDestination() {
    return exDestination;
  }

  public void setExDestination(String exDestination) {
    this.exDestination = exDestination;
  }

  public BitmexExecution ordStatus(String ordStatus) {
    this.ordStatus = ordStatus;
    return this;
  }

   /**
   * Get ordStatus
   * @return ordStatus
  **/
  @ApiModelProperty(value = "")
  public String getOrdStatus() {
    return ordStatus;
  }

  public void setOrdStatus(String ordStatus) {
    this.ordStatus = ordStatus;
  }

  public BitmexExecution triggered(String triggered) {
    this.triggered = triggered;
    return this;
  }

   /**
   * Get triggered
   * @return triggered
  **/
  @ApiModelProperty(value = "")
  public String getTriggered() {
    return triggered;
  }

  public void setTriggered(String triggered) {
    this.triggered = triggered;
  }

  public BitmexExecution workingIndicator(Boolean workingIndicator) {
    this.workingIndicator = workingIndicator;
    return this;
  }

   /**
   * Get workingIndicator
   * @return workingIndicator
  **/
  @ApiModelProperty(value = "")
  public Boolean isWorkingIndicator() {
    return workingIndicator;
  }

  public void setWorkingIndicator(Boolean workingIndicator) {
    this.workingIndicator = workingIndicator;
  }

  public BitmexExecution ordRejReason(String ordRejReason) {
    this.ordRejReason = ordRejReason;
    return this;
  }

   /**
   * Get ordRejReason
   * @return ordRejReason
  **/
  @ApiModelProperty(value = "")
  public String getOrdRejReason() {
    return ordRejReason;
  }

  public void setOrdRejReason(String ordRejReason) {
    this.ordRejReason = ordRejReason;
  }

  public BitmexExecution simpleLeavesQty(Double simpleLeavesQty) {
    this.simpleLeavesQty = simpleLeavesQty;
    return this;
  }

   /**
   * Get simpleLeavesQty
   * @return simpleLeavesQty
  **/
  @ApiModelProperty(value = "")
  public Double getSimpleLeavesQty() {
    return simpleLeavesQty;
  }

  public void setSimpleLeavesQty(Double simpleLeavesQty) {
    this.simpleLeavesQty = simpleLeavesQty;
  }

  public BitmexExecution leavesQty(BigDecimal leavesQty) {
    this.leavesQty = leavesQty;
    return this;
  }

   /**
   * Get leavesQty
   * @return leavesQty
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getLeavesQty() {
    return leavesQty;
  }

  public void setLeavesQty(BigDecimal leavesQty) {
    this.leavesQty = leavesQty;
  }

  public BitmexExecution simpleCumQty(Double simpleCumQty) {
    this.simpleCumQty = simpleCumQty;
    return this;
  }

   /**
   * Get simpleCumQty
   * @return simpleCumQty
  **/
  @ApiModelProperty(value = "")
  public Double getSimpleCumQty() {
    return simpleCumQty;
  }

  public void setSimpleCumQty(Double simpleCumQty) {
    this.simpleCumQty = simpleCumQty;
  }

  public BitmexExecution cumQty(BigDecimal cumQty) {
    this.cumQty = cumQty;
    return this;
  }

   /**
   * Get cumQty
   * @return cumQty
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCumQty() {
    return cumQty;
  }

  public void setCumQty(BigDecimal cumQty) {
    this.cumQty = cumQty;
  }

  public BitmexExecution avgPx(Double avgPx) {
    this.avgPx = avgPx;
    return this;
  }

   /**
   * Get avgPx
   * @return avgPx
  **/
  @ApiModelProperty(value = "")
  public Double getAvgPx() {
    return avgPx;
  }

  public void setAvgPx(Double avgPx) {
    this.avgPx = avgPx;
  }

  public BitmexExecution commission(Double commission) {
    this.commission = commission;
    return this;
  }

   /**
   * Get commission
   * @return commission
  **/
  @ApiModelProperty(value = "")
  public Double getCommission() {
    return commission;
  }

  public void setCommission(Double commission) {
    this.commission = commission;
  }

  public BitmexExecution tradePublishIndicator(String tradePublishIndicator) {
    this.tradePublishIndicator = tradePublishIndicator;
    return this;
  }

   /**
   * Get tradePublishIndicator
   * @return tradePublishIndicator
  **/
  @ApiModelProperty(value = "")
  public String getTradePublishIndicator() {
    return tradePublishIndicator;
  }

  public void setTradePublishIndicator(String tradePublishIndicator) {
    this.tradePublishIndicator = tradePublishIndicator;
  }

  public BitmexExecution multiLegReportingType(String multiLegReportingType) {
    this.multiLegReportingType = multiLegReportingType;
    return this;
  }

   /**
   * Get multiLegReportingType
   * @return multiLegReportingType
  **/
  @ApiModelProperty(value = "")
  public String getMultiLegReportingType() {
    return multiLegReportingType;
  }

  public void setMultiLegReportingType(String multiLegReportingType) {
    this.multiLegReportingType = multiLegReportingType;
  }

  public BitmexExecution text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public BitmexExecution trdMatchID(String trdMatchID) {
    this.trdMatchID = trdMatchID;
    return this;
  }

   /**
   * Get trdMatchID
   * @return trdMatchID
  **/
  @ApiModelProperty(value = "")
  public String getTrdMatchID() {
    return trdMatchID;
  }

  public void setTrdMatchID(String trdMatchID) {
    this.trdMatchID = trdMatchID;
  }

  public BitmexExecution execCost(BigDecimal execCost) {
    this.execCost = execCost;
    return this;
  }

   /**
   * Get execCost
   * @return execCost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getExecCost() {
    return execCost;
  }

  public void setExecCost(BigDecimal execCost) {
    this.execCost = execCost;
  }

  public BitmexExecution execComm(BigDecimal execComm) {
    this.execComm = execComm;
    return this;
  }

   /**
   * Get execComm
   * @return execComm
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getExecComm() {
    return execComm;
  }

  public void setExecComm(BigDecimal execComm) {
    this.execComm = execComm;
  }

  public BitmexExecution homeNotional(Double homeNotional) {
    this.homeNotional = homeNotional;
    return this;
  }

   /**
   * Get homeNotional
   * @return homeNotional
  **/
  @ApiModelProperty(value = "")
  public Double getHomeNotional() {
    return homeNotional;
  }

  public void setHomeNotional(Double homeNotional) {
    this.homeNotional = homeNotional;
  }

  public BitmexExecution foreignNotional(Double foreignNotional) {
    this.foreignNotional = foreignNotional;
    return this;
  }

   /**
   * Get foreignNotional
   * @return foreignNotional
  **/
  @ApiModelProperty(value = "")
  public Double getForeignNotional() {
    return foreignNotional;
  }

  public void setForeignNotional(Double foreignNotional) {
    this.foreignNotional = foreignNotional;
  }

  public BitmexExecution transactTime(OffsetDateTime transactTime) {
    this.transactTime = transactTime;
    return this;
  }

   /**
   * Get transactTime
   * @return transactTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTransactTime() {
    return transactTime;
  }

  public void setTransactTime(OffsetDateTime transactTime) {
    this.transactTime = transactTime;
  }

  public BitmexExecution timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BitmexExecution execution = (BitmexExecution) o;
    return Objects.equals(this.execID, execution.execID) &&
        Objects.equals(this.orderID, execution.orderID) &&
        Objects.equals(this.clOrdID, execution.clOrdID) &&
        Objects.equals(this.clOrdLinkID, execution.clOrdLinkID) &&
        Objects.equals(this.account, execution.account) &&
        Objects.equals(this.symbol, execution.symbol) &&
        Objects.equals(this.side, execution.side) &&
        Objects.equals(this.lastQty, execution.lastQty) &&
        Objects.equals(this.lastPx, execution.lastPx) &&
        Objects.equals(this.underlyingLastPx, execution.underlyingLastPx) &&
        Objects.equals(this.lastMkt, execution.lastMkt) &&
        Objects.equals(this.lastLiquidityInd, execution.lastLiquidityInd) &&
        Objects.equals(this.simpleOrderQty, execution.simpleOrderQty) &&
        Objects.equals(this.orderQty, execution.orderQty) &&
        Objects.equals(this.price, execution.price) &&
        Objects.equals(this.displayQty, execution.displayQty) &&
        Objects.equals(this.stopPx, execution.stopPx) &&
        Objects.equals(this.pegOffsetValue, execution.pegOffsetValue) &&
        Objects.equals(this.pegPriceType, execution.pegPriceType) &&
        Objects.equals(this.currency, execution.currency) &&
        Objects.equals(this.settlCurrency, execution.settlCurrency) &&
        Objects.equals(this.execType, execution.execType) &&
        Objects.equals(this.ordType, execution.ordType) &&
        Objects.equals(this.timeInForce, execution.timeInForce) &&
        Objects.equals(this.execInst, execution.execInst) &&
        Objects.equals(this.contingencyType, execution.contingencyType) &&
        Objects.equals(this.exDestination, execution.exDestination) &&
        Objects.equals(this.ordStatus, execution.ordStatus) &&
        Objects.equals(this.triggered, execution.triggered) &&
        Objects.equals(this.workingIndicator, execution.workingIndicator) &&
        Objects.equals(this.ordRejReason, execution.ordRejReason) &&
        Objects.equals(this.simpleLeavesQty, execution.simpleLeavesQty) &&
        Objects.equals(this.leavesQty, execution.leavesQty) &&
        Objects.equals(this.simpleCumQty, execution.simpleCumQty) &&
        Objects.equals(this.cumQty, execution.cumQty) &&
        Objects.equals(this.avgPx, execution.avgPx) &&
        Objects.equals(this.commission, execution.commission) &&
        Objects.equals(this.tradePublishIndicator, execution.tradePublishIndicator) &&
        Objects.equals(this.multiLegReportingType, execution.multiLegReportingType) &&
        Objects.equals(this.text, execution.text) &&
        Objects.equals(this.trdMatchID, execution.trdMatchID) &&
        Objects.equals(this.execCost, execution.execCost) &&
        Objects.equals(this.execComm, execution.execComm) &&
        Objects.equals(this.homeNotional, execution.homeNotional) &&
        Objects.equals(this.foreignNotional, execution.foreignNotional) &&
        Objects.equals(this.transactTime, execution.transactTime) &&
        Objects.equals(this.timestamp, execution.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(execID, orderID, clOrdID, clOrdLinkID, account, symbol, side, lastQty, lastPx, underlyingLastPx, lastMkt, lastLiquidityInd, simpleOrderQty, orderQty, price, displayQty, stopPx, pegOffsetValue, pegPriceType, currency, settlCurrency, execType, ordType, timeInForce, execInst, contingencyType, exDestination, ordStatus, triggered, workingIndicator, ordRejReason, simpleLeavesQty, leavesQty, simpleCumQty, cumQty, avgPx, commission, tradePublishIndicator, multiLegReportingType, text, trdMatchID, execCost, execComm, homeNotional, foreignNotional, transactTime, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BitmexExecution {\n");
    
    sb.append("    execID: ").append(toIndentedString(execID)).append("\n");
    sb.append("    orderID: ").append(toIndentedString(orderID)).append("\n");
    sb.append("    clOrdID: ").append(toIndentedString(clOrdID)).append("\n");
    sb.append("    clOrdLinkID: ").append(toIndentedString(clOrdLinkID)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    lastQty: ").append(toIndentedString(lastQty)).append("\n");
    sb.append("    lastPx: ").append(toIndentedString(lastPx)).append("\n");
    sb.append("    underlyingLastPx: ").append(toIndentedString(underlyingLastPx)).append("\n");
    sb.append("    lastMkt: ").append(toIndentedString(lastMkt)).append("\n");
    sb.append("    lastLiquidityInd: ").append(toIndentedString(lastLiquidityInd)).append("\n");
    sb.append("    simpleOrderQty: ").append(toIndentedString(simpleOrderQty)).append("\n");
    sb.append("    orderQty: ").append(toIndentedString(orderQty)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    displayQty: ").append(toIndentedString(displayQty)).append("\n");
    sb.append("    stopPx: ").append(toIndentedString(stopPx)).append("\n");
    sb.append("    pegOffsetValue: ").append(toIndentedString(pegOffsetValue)).append("\n");
    sb.append("    pegPriceType: ").append(toIndentedString(pegPriceType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    settlCurrency: ").append(toIndentedString(settlCurrency)).append("\n");
    sb.append("    execType: ").append(toIndentedString(execType)).append("\n");
    sb.append("    ordType: ").append(toIndentedString(ordType)).append("\n");
    sb.append("    timeInForce: ").append(toIndentedString(timeInForce)).append("\n");
    sb.append("    execInst: ").append(toIndentedString(execInst)).append("\n");
    sb.append("    contingencyType: ").append(toIndentedString(contingencyType)).append("\n");
    sb.append("    exDestination: ").append(toIndentedString(exDestination)).append("\n");
    sb.append("    ordStatus: ").append(toIndentedString(ordStatus)).append("\n");
    sb.append("    triggered: ").append(toIndentedString(triggered)).append("\n");
    sb.append("    workingIndicator: ").append(toIndentedString(workingIndicator)).append("\n");
    sb.append("    ordRejReason: ").append(toIndentedString(ordRejReason)).append("\n");
    sb.append("    simpleLeavesQty: ").append(toIndentedString(simpleLeavesQty)).append("\n");
    sb.append("    leavesQty: ").append(toIndentedString(leavesQty)).append("\n");
    sb.append("    simpleCumQty: ").append(toIndentedString(simpleCumQty)).append("\n");
    sb.append("    cumQty: ").append(toIndentedString(cumQty)).append("\n");
    sb.append("    avgPx: ").append(toIndentedString(avgPx)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    tradePublishIndicator: ").append(toIndentedString(tradePublishIndicator)).append("\n");
    sb.append("    multiLegReportingType: ").append(toIndentedString(multiLegReportingType)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    trdMatchID: ").append(toIndentedString(trdMatchID)).append("\n");
    sb.append("    execCost: ").append(toIndentedString(execCost)).append("\n");
    sb.append("    execComm: ").append(toIndentedString(execComm)).append("\n");
    sb.append("    homeNotional: ").append(toIndentedString(homeNotional)).append("\n");
    sb.append("    foreignNotional: ").append(toIndentedString(foreignNotional)).append("\n");
    sb.append("    transactTime: ").append(toIndentedString(transactTime)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

